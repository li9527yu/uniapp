{"version":3,"sources":["webpack:///E:/Code_Me/Webman/busInto/RedDot-Bus-main/uniapp/components/uni-clientdb/uni-clientdb.vue?5169","webpack:///E:/Code_Me/Webman/busInto/RedDot-Bus-main/uniapp/components/uni-clientdb/uni-clientdb.vue?f2bf","webpack:///E:/Code_Me/Webman/busInto/RedDot-Bus-main/uniapp/components/uni-clientdb/uni-clientdb.vue?752c","webpack:///E:/Code_Me/Webman/busInto/RedDot-Bus-main/uniapp/components/uni-clientdb/uni-clientdb.vue?901b","uni-app:///components/uni-clientdb/uni-clientdb.vue"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyH;AACzH;AACgE;AACL;;;AAG3D;AACqK;AACrK,gBAAgB,+KAAU;AAC1B,EAAE,kFAAM;AACR,EAAE,uFAAM;AACR,EAAE,gGAAe;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,2FAAU;AACZ;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACtBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAsmB,CAAgB,goBAAG,EAAC,C;;;;;;;;;;;;;;;;;;;ACO1nB;AACA;;AAEA;AACA,cADA;AAEA,gBAFA;;AAIA;AACA,YADA;AAEA,oBAFA;;;AAKA;AACA,YADA;AAEA,QAFA;AAGA,OAHA;AAIA,aAJA;AAKA,UALA;AAMA,UANA;AAOA,SAPA;AAQA,OARA;;;AAWA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA,qBADA;AAEA;AACA;AACA,2BADA;AAEA,aAFA,sBAEA;AACA;AACA,OAJA,EADA;;AAOA;AACA,kBADA;AAEA,iBAFA,EAPA;;AAWA;AACA,kBADA;AAEA,iBAFA,EAXA;;AAeA;AACA,kBADA;AAEA,iBAFA,EAfA;;AAmBA;AACA,kBADA;AAEA,oBAFA,EAnBA;;AAuBA;AACA,kBADA;AAEA,gBAFA,EAvBA;;AA2BA;AACA,kBADA;AAEA,iBAFA,EA3BA;;AA+BA;AACA,6BADA;AAEA,oBAFA,EA/BA;;AAmCA;AACA,kBADA;AAEA,iBAFA,EAnCA;;AAuCA;AACA,4BADA;AAEA,iBAFA,EAvCA;;AA2CA;AACA,6BADA;AAEA,oBAFA,EA3CA;;AA+CA;AACA,mBADA;AAEA,oBAFA,EA/CA,EAFA;;;AAsDA,MAtDA,kBAsDA;AACA;AACA,oBADA;AAEA,kBAFA;AAGA;AACA,iCADA;AAEA,2BAFA;AAGA,gBAHA,EAHA;;AAQA,sBARA;;AAUA,GAjEA;AAkEA,SAlEA,qBAkEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAFA;AAGA;AACA,KANA,EAMA;AACA;AACA;AACA;AACA,KAVA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA;AACA;AACA;AACA,GA5HA;;;;;;;;;;;;;;;AA2IA;AACA,YADA,oBACA,KADA,EACA,KADA,EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAXA,MAWA;AACA;AACA;;AAEA;AACA,KAnBA;AAoBA,YApBA,sBAoBA;AACA;AACA;AACA;AACA;AACA,KAzBA;AA0BA,WA1BA,qBA0BA;AACA;AACA;AACA,KA7BA;AA8BA,SA9BA,mBA8BA;AACA;AACA;AACA,KAjCA;AAkCA,SAlCA,mBAkCA;AACA;AACA,KApCA;AAqCA,UArCA,kBAqCA,EArCA;;;;;AA0CA,yGAJA,MAIA,QAJA,MAIA,CAHA,QAGA,QAHA,QAGA,CAFA,YAEA,QAFA,YAEA,CADA,cACA,QADA,cACA;AACA;AACA,mCADA;AAEA,4CAFA;AAGA,wBAHA;AAIA;AACA;AACA;AACA;AACA;AACA,SATA;;AAWA,KAtDA;AAuDA,iBAvDA,yBAuDA,QAvDA,EAuDA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BADA;;;;AAKA,kBALA,CAGA,IAHA,eAGA,IAHA,CAIA,KAJA,eAIA,KAJA;AAMA;;AAEA;AACA;;AAEA;AACA;AACA,SAFA,MAEA;AACA;AACA;AACA;AACA;AACA,SALA,MAKA;AACA;AACA;AACA;;;;;;;;AAQA,OA7BA,EA6BA,KA7BA,CA6BA;AACA;AACA;AACA;AACA;AACA,OAlCA;AAmCA,KAjGA;AAkGA,YAlGA,sBAkGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAhBA;;;;;AAqBA,6BArBA,CAmBA,OAnBA,yBAmBA,OAnBA,CAoBA,IApBA,yBAoBA,IApBA;AAsBA;AACA,+BADA;;;AAIA;AACA,KA7HA;AA8HA,eA9HA,uBA8HA,EA9HA,EA8HA,MA9HA,EA8HA,QA9HA,EA8HA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kBADA;;;AAIA;AACA;AACA;AACA;;AAEA;AACA,0BADA;AAEA,YAFA,GAEA,IAFA,CAEA;AACA;AACA;AACA;AACA,SAFA,MAEA;AACA;AACA;AACA,OATA,EASA,KATA,CASA;AACA;AACA,8BADA;AAEA,2BAFA;;AAIA,OAdA,EAcA,OAdA,CAcA;AACA;AACA,OAhBA;AAiBA,KAlKA;AAmKA,cAnKA,sBAmKA,GAnKA,EAmKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KA7KA;AA8KA,kBA9KA,0BA8KA,IA9KA,EA8KA,IA9KA,EA8KA;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA,KApLA,EA3IA,E","file":"components/uni-clientdb/uni-clientdb.js","sourcesContent":["import { render, staticRenderFns, recyclableRender, components } from \"./uni-clientdb.vue?vue&type=template&id=e6870178&\"\nvar renderjs\nimport script from \"./uni-clientdb.vue?vue&type=script&lang=js&\"\nexport * from \"./uni-clientdb.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\runtime\\\\componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"components/uni-clientdb/uni-clientdb.vue\"\nexport default component.exports","export * from \"-!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\templateLoader.js??vue-loader-options!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--16-0!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\template.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-uni-app-loader\\\\page-meta.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./uni-clientdb.vue?vue&type=template&id=e6870178&\"","var components\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--12-1!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./uni-clientdb.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--12-1!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./uni-clientdb.vue?vue&type=script&lang=js&\"","<template>\n  <view>\n    <slot :options=\"options\" :data=\"dataList\" :pagination=\"paginationInternal\" :loading=\"loading\" :error=\"errorMessage\"></slot>\n  </view>\n</template>\n\n<script>\n  const db = uniCloud.database();\n  const dbCmd = db.command;\n\n  const events = {\n    load: 'load',\n    error: 'error'\n  }\n  const pageMode = {\n    add: 'add',\n    replace: 'replace'\n  }\n\n  const attrs = [\n    'collection',\n    'action',\n    'field',\n    'pageCurrent',\n    'pageSize',\n    'getcount',\n    'orderby',\n    'where'\n  ]\n\n  /**\n   * uni-clientdb\n   * @description uni-clientdb是一个数据库查询组件，它是对uni-clientdb的js库的再封装。\n   * @tutorial https://uniapp.dcloud.net.cn/uniCloud/uni-clientdb-component\n   * @property {String} collection 表名\n   * @property {String} action 云端执行数据库查询的前或后，触发某个action函数操作，进行预处理或后处理\n   * @property {String} field 查询字段，多个字段用 `,` 分割\n   * @property {String} orderby 排序字段及正序倒叙设置\n   * @property {String} where 查询条件\n   * @property {String} pageData = [add|replace] `add` 多次查询的集合, `replace` 当前查询的集合\n   * @value add 多次查询的集合\n   * @value replace 当前查询的集合\n   * @property {Number} pageCurrent 当前页\n   * @property {Number} pageSize 每页数据数量\n   * @property {Boolean} getone = [true|false] 指定查询结果是否返回数组第一条数据，默认 false。在false情况下返回的是数组，即便只有一条结果，也需要[0]的方式获取。在true下，直接返回结果数据，少一层数组\n   * @value true 返回数组第一条数据\n   * @value false 返回类型是数组，即便只有一条结果\n   * @property {Boolean} getcount 是否查询总数量\n   * @property {Boolean} manual 是否手动加载数据，默认为 false，页面onready时自动联网加载数据\n   * @value true 开启后需要手动加载数据\n   * @value false 页面onready时自动联网加载数据\n   * @event {Function} load 成功回调。如联网返回结果后，想修改下数据再渲染界面，则在本方法里对data进行修改\n   * @event {Function} error 失败回调\n   */\n  export default {\n    name: 'UniClientdb',\n    props: {\n      options: {\n        type: [Object, Array],\n        default () {\n          return {}\n        }\n      },\n      collection: {\n        type: String,\n        default: ''\n      },\n      action: {\n        type: String,\n        default: ''\n      },\n      field: {\n        type: String,\n        default: ''\n      },\n      pageData: {\n        type: String,\n        default: 'add'\n      },\n      pageCurrent: {\n        type: Number,\n        default: 1\n      },\n      pageSize: {\n        type: Number,\n        default: 20\n      },\n      getcount: {\n        type: [Boolean, String],\n        default: false\n      },\n      orderby: {\n        type: String,\n        default: ''\n      },\n      where: {\n        type: [String, Object],\n        default: ''\n      },\n      getone: {\n        type: [Boolean, String],\n        default: false\n      },\n      manual: {\n        type: Boolean,\n        default: false\n      }\n    },\n    data() {\n      return {\n        loading: false,\n        dataList: [],\n        paginationInternal: {\n          current: this.pageCurrent,\n          size: this.pageSize,\n          count: 0\n        },\n        errorMessage: ''\n      }\n    },\n    created() {\n      this._isEnded = false\n\n      this.$watch(() => {\n        var al = []\n        attrs.forEach(key => {\n          al.push(this[key])\n        })\n        return al\n      }, () => {\n        this.clear()\n        this.reset()\n        this._execLoadData()\n      })\n\n      // #ifdef H5\n      if (process.env.NODE_ENV === 'development') {\n        this._debugDataList = []\n        if (!window.unidev) {\n          window.unidev = {\n            clientDB: {\n              data: []\n            }\n          }\n        }\n        unidev.clientDB.data.push(this._debugDataList)\n      }\n      // #endif\n\n      // #ifdef MP-TOUTIAO\n      let changeName\n      let events = this.$scope.dataset.eventOpts\n      for (var i = 0; i < events.length; i++) {\n        let event = events[i]\n        if (event[0].includes('^load')) {\n          changeName = event[1][0][0]\n        }\n      }\n      if (changeName) {\n        let parent = this.$parent\n        let maxDepth = 16\n        this._changeDataFunction = null\n        while (parent && maxDepth > 0) {\n          let fun = parent[changeName]\n          if (fun && typeof fun === 'function') {\n            this._changeDataFunction = fun\n            maxDepth = 0\n            break\n          }\n          parent = parent.$parent\n          maxDepth--;\n        }\n      }\n      // #endif\n\n      if (!this.manual) {\n        this.loadData()\n      }\n    },\n    // #ifdef H5\n    beforeDestroy() {\n      if (process.env.NODE_ENV === 'development' && window.unidev) {\n        var cd = this._debugDataList\n        var dl = unidev.clientDB.data\n        for (var i = dl.length - 1; i >= 0; i--) {\n          if (dl[i] === cd) {\n            dl.splice(i, 1)\n            break\n          }\n        }\n      }\n    },\n    // #endif\n    methods: {\n      loadData(args1, args2) {\n        let callback = null\n        if (typeof args1 === 'object') {\n          if (args1.clear) {\n            this.clear()\n            this.reset()\n          }\n          if (args1.current !== undefined) {\n            this.paginationInternal.current = args1.current\n          }\n          if (typeof args2 === 'function') {\n            callback = args2\n          }\n        } else if (typeof args1 === 'function') {\n          callback = args1\n        }\n\n        this._execLoadData(callback)\n      },\n      loadMore() {\n        if (this._isEnded) {\n          return\n        }\n        this._execLoadData()\n      },\n      refresh() {\n        this.clear()\n        this._execLoadData()\n      },\n      clear() {\n        this._isEnded = false\n        this.dataList = []\n      },\n      reset() {\n        this.paginationInternal.current = 1\n      },\n      remove(id, {\n        action,\n        callback,\n        confirmTitle,\n        confirmContent\n      } = {}) {\n        uni.showModal({\n          title: confirmTitle || '提示',\n          content: confirmContent || '是否删除该数据',\n          showCancel: true,\n          success: (res) => {\n            if (!res.confirm) {\n              return\n            }\n            this._execRemove(id, action, callback)\n          }\n        })\n      },\n      _execLoadData(callback) {\n        if (this.loading) {\n          return\n        }\n        this.loading = true\n        this.errorMessage = ''\n\n        this._getExec().then((res) => {\n          this.loading = false\n          const {\n            data,\n            count\n          } = res.result\n          this._isEnded = data.length < this.pageSize\n\n          callback && callback(data, this._isEnded)\n          this._dispatchEvent(events.load, data)\n\n          if (this.getone) {\n            this.dataList = data.length ? data[0] : undefined\n          } else if (this.pageData === pageMode.add) {\n            this.dataList.push(...data)\n            if (this.dataList.length) {\n              this.paginationInternal.current++\n            }\n          } else if (this.pageData === pageMode.replace) {\n            this.dataList = data\n            this.paginationInternal.count = count\n          }\n\n          // #ifdef H5\n          if (process.env.NODE_ENV === 'development') {\n            this._debugDataList.length = 0\n            this._debugDataList.push(...JSON.parse(JSON.stringify(this.dataList)))\n          }\n          // #endif\n        }).catch((err) => {\n          this.loading = false\n          this.errorMessage = err\n          callback && callback()\n          this.$emit(events.error, err)\n        })\n      },\n      _getExec() {\n        let exec = db\n        if (this.action) {\n          exec = exec.action(this.action)\n        }\n\n        exec = db.collection(this.collection)\n\n        if (!(!this.where || !Object.keys(this.where).length)) {\n          exec = exec.where(this.where)\n        }\n        if (this.field) {\n          exec = exec.field(this.field)\n        }\n        if (this.orderby) {\n          exec = exec.orderBy(this.orderby)\n        }\n\n        const {\n          current,\n          size\n        } = this.paginationInternal\n        exec = exec.skip(size * (current - 1)).limit(size).get({\n          getCount: this.getcount\n        })\n\n        return exec\n      },\n      _execRemove(id, action, callback) {\n        if (!this.collection || !id) {\n          return\n        }\n\n        const ids = Array.isArray(id) ? id : [id]\n        if (!ids.length) {\n          return\n        }\n\n        uni.showLoading({\n          mask: true\n        })\n\n        let exec = db\n        if (action) {\n          exec = exec.action(action)\n        }\n\n        exec.collection(this.collection).where({\n          _id: dbCmd.in(ids)\n        }).remove().then((res) => {\n          callback && callback(res)\n          if (this.pageData === pageMode.replace) {\n            this.refresh()\n          } else {\n            this.removeData(ids)\n          }\n        }).catch((err) => {\n          uni.showModal({\n            content: err.message,\n            showCancel: false\n          })\n        }).finally(() => {\n          uni.hideLoading()\n        })\n      },\n      removeData(ids) {\n        let il = ids.slice(0)\n        let dl = this.dataList\n        for (let i = dl.length - 1; i >= 0; i--) {\n          let index = il.indexOf(dl[i]._id)\n          if (index >= 0) {\n            dl.splice(i, 1)\n            il.splice(index, 1)\n          }\n        }\n      },\n      _dispatchEvent(type, data) {\n        if (this._changeDataFunction) {\n          this._changeDataFunction(data, this._isEnded)\n        } else {\n          this.$emit(type, data, this._isEnded)\n        }\n      }\n    }\n  }\n</script>\n"],"sourceRoot":""}